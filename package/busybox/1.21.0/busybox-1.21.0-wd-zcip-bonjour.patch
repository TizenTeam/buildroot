--- busybox-1.21.0/networking/zcip.c	2014-08-04 00:06:31.265979568 +0800
+++ busybox-1.21.0-mod/networking/zcip.c	2014-08-04 00:06:45.545978454 +0800
@@ -56,7 +56,7 @@
 	LINKLOCAL_ADDR = 0xa9fe0000,
 
 /* protocol timeout parameters, specified in seconds */
-	PROBE_WAIT = 1,
+	PROBE_WAIT = 2,
 	PROBE_MIN = 1,
 	PROBE_MAX = 2,
 	PROBE_NUM = 3,
@@ -387,7 +387,7 @@
 			case RATE_LIMIT_PROBE:
 				// timeouts in the RATE_LIMIT_PROBE state mean no conflicting ARP packets
 				// have been received, so we can move immediately to the announce state
-				state = ANNOUNCE;
+				state = PROBE;
 				nclaims = 0;
 				VDBG("announce/%u %s@%s\n",
 						nclaims, argv_intf, inet_ntoa(ip));
@@ -406,7 +406,7 @@
 					arp(/* ARPOP_REQUEST, */
 							/* &eth_addr, */ ip,
 							&eth_addr, ip);
-					timeout_ms = ANNOUNCE_INTERVAL * 1000;
+					//timeout_ms = ANNOUNCE_INTERVAL * 1000;
 				}
 				else {
 					// Switch to monitor state.
@@ -524,13 +524,15 @@
 					conflicts++;
 					if (conflicts >= MAX_CONFLICTS) {
 						VDBG("%s ratelimit\n", argv_intf);
-						timeout_ms = RATE_LIMIT_INTERVAL * 1000;
+						timeout_ms = RATE_LIMIT_INTERVAL * 1000 + 30000;
 						state = RATE_LIMIT_PROBE;
+					}else{
+						timeout_ms = 0;
 					}
 
 					// restart the whole protocol
 					ip.s_addr = pick();
-					timeout_ms = 0;
+					//timeout_ms = 0;
 					nprobes = 0;
 					nclaims = 0;
 				}
